var { Start, Update } = require('./base');
var scene, camera, renderer, objects = [];
var options = {
	viewAngle: 60,
	nearClip: 1,
	farClip: 1000
};

global.onload = function(){
	scene = new THREE.Scene();
	
	camera = new THREE.PerspectiveCamera(options.viewAngle, global.innerWidth / global.innerHeight, options.nearClip, options.farClip);
	camera.lookAt( scene.position );
	
	renderer = new THREE.WebGLRenderer({ antialias: true });
	renderer.setPixelRatio( global.devicePixelRatio );
	renderer.setSize( global.innerWidth, global.innerHeight );
	document.body.appendChild( renderer.domElement );
	
	Start(scene, camera, renderer, objects);
	render();
};

function render() {
	requestAnimationFrame(render);
	Update();
	renderer.render(scene, camera);// render the scene
}

module.exports = function(models, _opts){
	if (!models) return;
	
	merge(options, _opts || {});
	
	for (var i = 0; i < models.length; i++){
		objects.push(models[i]);
	}
};